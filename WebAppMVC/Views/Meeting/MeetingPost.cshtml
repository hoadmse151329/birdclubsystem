@model BAL.ViewModels.MeetingViewModel
@{
    ViewData["Title"] = "Meeting Post Page";
    Layout = "~/_layout";
}

<html>
  <head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="~/css/Meeting.css" />
    <style>
        #map {
            height: 400px;
        }
    </style>
  </head>
  <body>
    <div class="member-meeting-post">
      <div class="overlap-wrapper">
        <div class="overlap">
          <div class="background">
            <div class="overlap-group">
              <img class="subtract" src="~/images/Background.png" />
              <div class="rectangle"></div>
              <div class="div"></div>
              <div class="rectangle-2"></div>
            </div>
          </div>
          <div class="headlines">
            <div class="group">
              <div class="overlap-2">
                <div class="flexcontainer">
                  <p class="text">
                      @{
						    if (ViewBag.error != null)
						    {
							    <span class="text-danger">@ViewBag.error</span>
						    }
					    }
                    <span class="text-wrapper">Content<br /></span>
                  </p>
                  <p class="span-wrapper">
                    <span class="span">
                        @Model.Description
                    </span>
                  </p>
                </div>
                <div class="flexcontainer-2">
                  <p class="text">
                    <span class="text-wrapper">Notes<br /></span>
                  </p>
                  <p class="p">
                    <span class="span">
                        @Model.Note
                    </span>
                  </p>
                </div>
                <div class="tittle">
                    <div class="div-wrapper"><div class="text-wrapper-3">Register</div></div>
                  </div>
                <img
                  class="soi-noi-hoi-thi-chim"
                  src="~/images/meeting.png"
                />
              </div>
            </div>
            <div class="info">
              <div class="overlap-3">
                <div>
                   <label for="addressInput">Enter Address:</label>
                                <input type="text" id="addressInput" placeholder="@Model.AreaNumber,@Model.Street,@Model.District,@Model.City">
                   <button onclick="updateMap()">Update Map</button>
                </div>
    
                <div id="map-container"></div>
                <div class="tittle">
                  <div class="overlap-group-2"><p class="text-wrapper-4">@Model.MeetingName</p></div>
                </div>
                <div class="text-wrapper-5">From @Model.StartDate.Value.ToString("MM/dd/yyyy") to @Model.EndDate.Value.ToString("MM/dd/syyyy")</div>


                <div class="group-2">
                  <div class="text-wrapper-6">Location</div>
                  <div class="text-wrapper-7">Participation Limit</div>
                  <div class="text-wrapper-8">Registration Deadlines</div>
                  <div class="text-wrapper-9">Contact</div>
                  <div class="text-wrapper-10">Organizer</div>
                </div>



                <div class="group-3">
                  <div class="text-wrapper-11">@Model.AreaNumber,@Model.Street,@Model.District,@Model.City</div>
                  @*<div class="text-wrapper-11">@Model.Street</div>*@
                  <p class="text-wrapper-12">@Model.NumberOfParticipantsLimit</p>
                  <div class="text-wrapper-13">@Model.RegistrationDeadline</div>
                  <div class="text-wrapper-14">ChaoMaoClub@gmail.com</div>
                  <div class="text-wrapper-15">@Model.Host</div>
                </div>
                <div class="register">
                    @{
                        if (Model.ParticipationNo != 0 && Model.ParticipationNo != null)
                        {
                            <div class="overlap-group-3 text-wrapper-16">
                                <span class="text-success">@ViewBag.PartNumber</span>
                            </div>
                            <form asp-action="MeetingDeRegister" asp-controller="Meeting" method="post" asp-route-meetingId="@Model.MeetingId">
                                <button class="overlap-group-3 text-wrapper-16" type="submit">Sign Out</button>
                            </form> 
                        }
                        else
                        {
                            <form asp-action="MeetingRegister" asp-controller="Meeting" method="post" asp-route-meetingId="@Model.MeetingId">
                                <button class="overlap-group-3 text-wrapper-16" type="submit">Register</button>
                            </form>             
                        }
                    }
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script>
        var map; // Declare map variable globally

        function initializeMap(coordinates) {
            // Create a map with a marker
            map = new ol.Map({
                target: 'map-container',
                layers: [
                    new ol.layer.Tile({
                        source: new ol.source.OSM()
                    }),
                    new ol.layer.Vector({
                        source: new ol.source.Vector({
                            features: [
                                new ol.Feature({
                                    geometry: new ol.geom.Point(ol.proj.fromLonLat(coordinates)),
                                })
                            ]
                        })
                    })
                ],
                view: new ol.View({
                    center: ol.proj.fromLonLat(coordinates),
                    zoom: 13
                })
            });
        }

        function updateMap() {
            var addressInput = document.getElementById('addressInput').value;

            if (addressInput.trim() !== '') {
                var geocodeUrl = 'https://nominatim.openstreetmap.org/search?format=json&limit=1&q=' + encodeURIComponent(addressInput);

                fetch(geocodeUrl)
                    .then(response => response.json())
                    .then(data => {
                        if (data && data.length > 0) {
                            var coordinates = [parseFloat(data[0].lon), parseFloat(data[0].lat)];

                            // Check if the map is already initialized
                            if (map) {
                                map.getView().setCenter(ol.proj.fromLonLat(coordinates));
                                map.getLayers().getArray()[1].getSource().getFeatures()[0].getGeometry().setCoordinates(ol.proj.fromLonLat(coordinates));
                            } else {
                                initializeMap(coordinates);
                            }
                        } else {
                            alert('Invalid address. Please try again.');
                        }
                    })
                    .catch(error => console.error('Error:', error));
            } else {
                alert('Please enter an address.');
            }
        }

        // Example: Initial location
        var initialLocation = "1600 Amphitheatre Parkway, Mountain View, CA";

        // Call the function to initialize the map with the initial location
        updateMap();
    </script>
<script src="https://openlayers.org/en/latest/build/ol.js"></script>
  </body>
</html>
